{"version":3,"sources":["components/Logo/brain.png","components/particlesOption.js","components/Navigation.js","components/Signin.js","components/Register.js","components/Logo/Logo.js","components/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/ColorRecognition/ColorBlock.js","components/ColorRecognition/ColorRecognition.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","particlesOption","Navigation","onRouteChange","onSigninStatusChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","id","htmlFor","type","name","value","Register","Logo","options","max","height","width","alt","src","brain","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onUpload","isReset","placeholder","onChange","accept","ColorBlock","hex","percent","textcolor","TEXTColor","findTextColor","backgroundColor","color","ColorRecognition","link","colors","linkstatus","colorBlockList","map","colorinfo","key","app","Clarifai","App","apiKey","route","setState","event","input","target","abstractColorInfo","response","outputs","data","raw_hex","w3c","Number","toFixed","sort","a","b","substr","length","models","predict","state","then","catch","finally","file","files","reader","FileReader","onload","e","result","split","readAsDataURL","params","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.3903f66a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.8580a503.png\";","const particlesOption = {\r\n    \"particles\":{\r\n        \"number\":{\"value\":160,\"density\":{\"enable\":true,\"value_area\":800}},\r\n        \"color\":{\"value\":\"#ffffff\"},\r\n        \"shape\":{\"type\":\"circle\",\"stroke\":{\"width\":0,\"color\":\"#000000\"},\"polygon\":{\"nb_sides\":5},\"image\":{\"src\":\"img/github.svg\",\"width\":100,\"height\":100}},\"opacity\":{\"value\":1,\"random\":true,\"anim\":{\"enable\":true,\"speed\":1,\"opacity_min\":0,\"sync\":false}},\r\n        \"size\":{\"value\":3,\"random\":true,\"anim\":{\"enable\":false,\"speed\":4,\"size_min\":0.3,\"sync\":false}},\r\n        \"line_linked\":{\"enable\":false,\"distance\":150,\"color\":\"#ffffff\",\"opacity\":0.4,\"width\":1},\r\n        \"move\":{\"enable\":true,\"speed\":1,\"direction\":\"none\",\"random\":true,\"straight\":false,\"out_mode\":\"out\",\"bounce\":false,\"attract\":{\"enable\":false,\"rotateX\":600,\"rotateY\":600}}\r\n    },\r\n    \"interactivity\":{\r\n        \"detect_on\":\"canvas\",\r\n        \"events\":{\"onhover\":{\"enable\":true,\"mode\":\"bubble\"},\"onclick\":{\"enable\":true,\"mode\":\"repulse\"},\"resize\":true},\r\n        \"modes\":{\"grab\":{\"distance\":400,\"line_linked\":{\"opacity\":1}},\"bubble\":{\"distance\":250,\"size\":0,\"duration\":2,\"opacity\":0,\"speed\":3},\"repulse\":{\"distance\":400,\"duration\":0.4},\"push\":{\"particles_nb\":4},\"remove\":{\"particles_nb\":2}}\r\n    },\r\n    \"retina_detect\":true\r\n}\r\n        \r\n\r\nexport default particlesOption","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,onSigninStatusChange,isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return(\r\n            <nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <p onClick={()=>{onRouteChange('home');onSigninStatusChange(false)}} className='f4 link dim white pa3 pointer underline'>Sign Out</p>\r\n            </nav>\r\n        )\r\n    }else{\r\n        return(\r\n            <nav style={{display:'flex',justifyContent:'space-between'}}>\r\n                <p onClick={()=>{onRouteChange('home');onSigninStatusChange(false)}} className='f4 link dim white pa3 pointer underline'>Home Page</p>\r\n                <div style={{display:'flex',justifyContent:'flex-end'}}>\r\n                    <p onClick={()=>{onRouteChange('signin');onSigninStatusChange(false)}} className='f4 link dim white pa3 pointer underline'>Sign In</p>\r\n                    <p onClick={()=>{onRouteChange('register');onSigninStatusChange(false)}} className='f4 link dim white pa3 pointer underline '>Register</p>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\n\r\nconst Signin = ({onRouteChange,onSigninStatusChange}) => {\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f3 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={()=>{onRouteChange('home');onSigninStatusChange(true)}} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign In\"/>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Signin","import React from 'react';\r\n\r\nconst Register = ({onRouteChange,onSigninStatusChange}) => {\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f3 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={()=>{onRouteChange('signin');onSigninStatusChange(false)}} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n \r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className='center ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 130, width: 130 }} >\r\n                <div className=\"Tilt-inner\"> \r\n                    <img alt='logo' src={brain} />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo ","import React from 'react';\r\n\r\nconst Rank = ({isSignedIn}) => {\r\n    if(isSignedIn===true){\r\n        return(\r\n            <div>\r\n                <div className='white f3 pa3'>\r\n                    {'Eva, your current rank is'}\r\n                </div>\r\n                <div className='white f2'>\r\n                    {'#1'}\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Rank","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange,onButtonSubmit,onUpload,isReset}) => {\r\n    return(\r\n        <div>\r\n            <p className='f3 white pa2'>\r\n                {\"This Magic Brain will detect colors in your pictures. Give it a try !\"}\r\n            </p>\r\n            <div className=\"pa2 center\">\r\n                <div className='center form pa4 br3 shadow-5'>\r\n                    {isReset===true\r\n                        ?<input className='f4 pa2 w-70 center' type='text' placeholder ='Enter an image url' value='' onChange={onInputChange}/>\r\n                        :<input className='f4 pa2 w-70 center' type='text' placeholder ='Enter an image url' onChange={onInputChange}/>\r\n                    }\r\n                    <button className='w-30 grow f5 link ph2 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label className='w-20 center upload-button pa2 bg-light-silver mt3 mb4' htmlFor='image-button'>Upload Image</label>\r\n                <input className='icon-button' type='file' accept=\"image/*\" id='image-button' onChange={onUpload}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from 'react';\r\nimport './ColorBlock.css'\r\nimport TEXTColor from 'textcolor'\r\n\r\n\r\nconst ColorBlock = ({hex,name,percent}) => {\r\n    const textcolor = TEXTColor.findTextColor(hex);\r\n    return(\r\n        <li className=\"color-block\" style={{backgroundColor: hex,height:'40px',color:textcolor}}>\r\n            <div className=\"color-info\"><strong>{name}</strong> {hex}</div>\r\n            <div className=\"color-percent\">{percent}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ColorBlock","import React from 'react';\r\nimport ColorBlock from './ColorBlock.js';\r\n\r\nconst ColorRecognition = ({link,colors,linkstatus}) => {\r\n    if(linkstatus==='true'){\r\n        const colorBlockList = colors.map(colorinfo => {\r\n            return <ColorBlock hex={colorinfo.hex} name={colorinfo.name} percent={colorinfo.percent} key={colorinfo.hex}/>\r\n        })\r\n        return(\r\n            <div className='center mt3 mb3'>\r\n                <div className='pa2'>\r\n                    <img src={link} alt='' width='500px'/>\r\n                </div>\r\n                <section className='pa1' style={{width:\"500px\"}}>\r\n                    <ul className='pa1'>\r\n                        {colorBlockList}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n        )\r\n    }else if(linkstatus==='invalidUrl'){\r\n        return <p className='red f3'>This isn't a valid image url. Please enter again !</p>\r\n    }else if(linkstatus==='invalidFile'){\r\n        return <p className='red f3'>This isn't an image file. Please upload again !</p>\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ColorRecognition","import React from 'react';\nimport './App.css';\n\nimport Particles from 'react-particles-js';\nimport particlesOption from '../components/particlesOption.js'\n\nimport Clarifai from 'clarifai'\n\nimport Navigation from '../components/Navigation.js'\nimport Signin from '../components/Signin.js'\nimport Register from '../components/Register.js'\nimport Logo from '../components/Logo/Logo.js'\nimport Rank from '../components/Rank.js'\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm.js'\nimport ColorRecognition from '../components/ColorRecognition/ColorRecognition.js'\n\n\nconst app = new Clarifai.App({apiKey: '7a4d95ae63234c00b04756627ab81528'});\n\nclass App extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            input:\"\",\n            isReset:false,\n            link:'', \n            colors:[{hex:'',name:'',percent:''}],\n            linkstatus:'',//'true','invalidUrl','invalidFile'\n            route:'home',//'home','signin','register'\n            isSignedIn:false,//true\n        } \n    }\n\n    onRouteChange = (route) => {\n        this.setState({route:route})\n    }\n\n    onSigninStatusChange = (isSignedIn) =>{\n        this.setState({isSignedIn:isSignedIn})\n    }\n\n    onInputChange = (event) =>{\n        this.setState({isReset:false})\n        this.setState({input:event.target.value})\n    }\n    \n    abstractColorInfo = (response) => {\n        const colors = response.outputs[0].data.colors.map(colorinfo =>{\n            return {hex:colorinfo.raw_hex,name:colorinfo.w3c.name,percent:Number(colorinfo.value*100).toFixed(1)+\"%\"}\n        });\n        colors.sort(function(a,b){\n            return b.percent.substr(0,b.percent.length-1)-a.percent.substr(0,a.percent.length-1)\n        })\n        return colors;\n    }\n\n    onButtonSubmit = () =>{\n        app.models\n            .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", this.state.input)\n            .then(response => this.setState({colors:this.abstractColorInfo(response)}))\n            .then(()=> this.setState({link: this.state.input}))\n            .then(() => this.setState({linkstatus:'true'}))\n            .catch(() => this.setState({linkstatus:'invalidUrl'}))\n            .finally(()=>this.setState({isReset:true}))\n    }\n\n    onUpload = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (e) =>{\n            app.models\n                .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", e.target.result.split('base64,')[1])\n                .then(response => this.setState({colors:this.abstractColorInfo(response)}))\n                .then(()=> this.setState({link: e.target.result}))\n                .then(() => this.setState({linkstatus:'true'}))\n                .catch(() => this.setState({linkstatus:'invalidFile'}));\n        }\n        reader.readAsDataURL(file);\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <Particles className='particles' params={particlesOption} />\n                <Navigation onRouteChange={this.onRouteChange} onSigninStatusChange={this.onSigninStatusChange} isSignedIn={this.state.isSignedIn}/>\n                {this.state.route==='home'\n                    ?<div>\n                        <Logo />\n                        <Rank isSignedIn={this.state.isSignedIn}/>\n                        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onUpload={this.onUpload} isReset={this.state.isReset}/>\n                        <ColorRecognition link={this.state.link} linkstatus={this.state.linkstatus} colors={this.state.colors}/>\n                    </div>\n                    :(\n                        this.state.route ===\"signin\"\n                        ?<Signin onRouteChange={this.onRouteChange} onSigninStatusChange={this.onSigninStatusChange}/> \n                        :(\n                            this.state.route === 'register'\n                            ?<Register onRouteChange={this.onRouteChange} onSigninStatusChange={this.onSigninStatusChange}/> \n                            :<div></div>\n                        )\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport * as serviceWorker from './serviceWorker.js';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}